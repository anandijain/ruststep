initSidebarItems({"enum":[["ConstraintExpr","Expression appears in `SUBTYPE_CONSTRAINT` with resolved [Path]"],["Named","Named AST portion of corresponding [Path]"],["ScopeType","Identifier in EXPRESS language must be one of scopes described in “Table 9 – Scope and identifier defining items”"],["SemanticError","Semantic errors"],["TypeDecl",""],["TypeRef",""]],"fn":[["gather_constraint_expr",""]],"struct":[["Bound",""],["Constraints","Global constraints in EXPRESS components"],["Entity",""],["EntityAttribute",""],["Enumeration","Enumeration of values, e.g. `TYPE text_path = ENUMERATION OF (up, right, down, left); END_TYPE;`"],["IR","Intermediate Representation"],["Instantiables","Instantiable subtypes described by a list of partial complex entity, e.g. $[A, B & C]$"],["Namespace","Namespace of loaded EXPRESS schema"],["PartialComplexEntity","Partial complex entity data type, e.g. $A \\And B \\And C$ in ISO document"],["Path",""],["Rename","Rename of user defined type, e.g. `TYPE box_height = positive_ratio_measure; END_TYPE;`"],["Schema",""],["Scope","Scope declaration"],["Select","Select of user defined types, e.g. `TYPE geometric_set_select = SELECT (point, curve); END_TYPE;`"],["Simple","Rename of primitive type, e.g. `TYPE label = STRING; ENDTYPE;`"],["SimpleType",""]],"trait":[["Legalize","Legalize partial AST input into corresponding intermediate representation"]]});